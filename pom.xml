<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>uk.ac.ebi.uniprot</groupId>
	<artifactId>open-targets</artifactId>
	<version>1.0.0</version>
	<properties>
		<japi.version>[1.0.20,)</japi.version>
		<jcommander.version>1.47</jcommander.version>
		<guice.version>4.0</guice.version>
		<slf4j.version>1.7.20</slf4j.version>
		<logback.version>1.1.7</logback.version>
		<mockito-version>1.10.19</mockito-version>
		<junit.version>5.1.0</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<jackson.version>2.10.3</jackson.version>
		<org.everit.json.schema.version>1.12.0</org.everit.json.schema.version>

		<!-- Auto-formatting -->
		<spotless.version>1.24.1</spotless.version>

		<maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.22.1</maven-failsafe-plugin.version>
	</properties>
	<name>UniProt Open Targets</name>

	<description>
		UniProt Open Targets disease association generator
	</description>

	<dependencies>
		<dependency>
			<groupId>uk.ac.ebi.uniprot</groupId>
			<artifactId>japi</artifactId>
			<version>${japi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>${jcommander.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guice.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.everit-org.json-schema</groupId>
			<artifactId>org.everit.json.schema</artifactId>
			<version>${org.everit.json.schema.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>

	</dependencies>

	<build>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>

				<!-- This is to create an uber-jar which contains all the dependencies. -->
				<!-- The artifact generated will have a classifier named "shade". -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<shadedArtifactAttached>true</shadedArtifactAttached>
						<shadedClassifierName>shade</shadedClassifierName>
						<filters>
							<filter>
								<artifact>*:*</artifact>
								<excludes>
									<exclude>META-INF/*.SF</exclude>
									<exclude>META-INF/*.DSA</exclude>
									<exclude>META-INF/*.RSA</exclude>
								</excludes>
							</filter>
						</filters>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<!-- Specify the configuration to the javac. Note, fork == true is important, 
						otherwise maven will just use JAVA_HOME's javac where it is used to run itself. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<fork>true</fork>
						<meminitial>128m</meminitial>
						<maxmem>512m</maxmem>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Auto-format code when built for consistency amongst developers' contributions -->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>
				<configuration>
					<java>
						<googleJavaFormat>
							<version>1.7</version>
							<!-- Optional, available versions: GOOGLE, AOSP https://github.com/google/google-java-format/blob/master/core/src/main/java/com/google/googlejavaformat/java/JavaFormatterOptions.java -->
							<style>GOOGLE</style>
						</googleJavaFormat>
						<removeUnusedImports />
						<importOrder>
							<order>java,javax,org,com</order>
						</importOrder>
					</java>
					<formats>
						<format>
							<includes>
								<include>pom.xml</include>
								<include>src/main/**/*.xml</include>
								<include>src/main/**/*.xsd</include>
							</includes>
							<eclipseWtp>
								<type>XML</type>
							</eclipseWtp>
						</format>
					</formats>
				</configuration>
				<executions>
					<execution>
						<!-- Reformats as soon as possible -->
						<id>spotless-apply</id>
						<phase>compile</phase>
						<goals>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>ebi-repo</id>
			<name>ebi-repo</name>
			<url>http://www.ebi.ac.uk/~maven/m2repo</url>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

</project>